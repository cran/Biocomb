// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// CalcGene
List CalcGene(List s_data, NumericMatrix seqAll, int prodValue, NumericVector thresholds);
RcppExport SEXP Biocomb_CalcGene(SEXP s_dataSEXP, SEXP seqAllSEXP, SEXP prodValueSEXP, SEXP thresholdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type s_data(s_dataSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type seqAll(seqAllSEXP);
    Rcpp::traits::input_parameter< int >::type prodValue(prodValueSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thresholds(thresholdsSEXP);
    __result = Rcpp::wrap(CalcGene(s_data, seqAll, prodValue, thresholds));
    return __result;
END_RCPP
}
// CalcROC
List CalcROC(List s_data, NumericVector seq, NumericVector thresholds);
RcppExport SEXP Biocomb_CalcROC(SEXP s_dataSEXP, SEXP seqSEXP, SEXP thresholdsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< List >::type s_data(s_dataSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type seq(seqSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type thresholds(thresholdsSEXP);
    __result = Rcpp::wrap(CalcROC(s_data, seq, thresholds));
    return __result;
END_RCPP
}
